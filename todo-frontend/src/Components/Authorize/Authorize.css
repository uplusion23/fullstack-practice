@import url('https://css.gg/ericsson.css');

.authorize {
  display: flex;
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  box-sizing: border-box;
  margin: 0;
  padding: 0;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  background-color: rgb(var(--background-0));
  user-select: none;
}

.authorize > h1 {
  display: flex;
  position: relative;
  width: 100%;
  height: 50px;
  line-height: 50px;
  box-sizing: border-box;
  margin: 0 0 40px 0;
  padding: 0;
  color: rgb(var(--color-primary));
  text-align: center;
  flex-direction: row;
  justify-content: center;
  align-items: center;
}

.authorize > h1 > i {
  --ggs: 1.3;
  color: rgb(var(--color-accent));
  margin: 0 20px 0 0;
}

.authorize > .authorize-form {
  display: flex;
  position: relative;
  width: 500px;
  height: auto;
  background-color: rgb(var(--background-1));
  border-radius: var(--border-radius);
  box-shadow: var(--box-shadow);
  box-sizing: border-box;
  margin: 0;
  padding: 60px 50px 50px 50px;
  flex-direction: column;
  align-items: center;
}

.authorize > .authorize-form.shake {
  animation: shake 0.82s cubic-bezier(.36,.07,.19,.97) both;
}

.authorize > .authorize-form > h1 {
  display: block;
  position: relative;
  width: 100%;
  height: 40px;
  line-height: 40px;
  margin: 0 0 10px 0;
  padding: 0;
  color: rgb(var(--color-primary));
  font-size: 2.3rem;
  text-align: center;
}

.authorize > .authorize-form > span {
  display: block;
  position: relative;
  width: 100%;
  height: 35px;
  line-height: 35px;
  margin: 0 0 30px 0;
  padding: 0;
  color: rgb(var(--color-muted));
  font-size: 1rem;
  text-align: center;
}

.authorize > .authorize-form > span.authorize-form-error {
  display: block;
  position: relative;
  width: 100%;
  height: 35px;
  line-height: 35px;
  margin: 25px 0 0 0;
  padding: 0;
  color: rgb(var(--color-red));
  font-size: 1rem;
  text-align: center;
}

.authorize > .authorize-form > input[type="text"],
.authorize > .authorize-form > input[type="password"] {
  display: block;
  position: relative;
  width: 100%;
  height: 65px;
  border-radius: var(--border-radius);
  line-height: 65px;
  margin: 0 0 20px 0;
  padding: 0 25px;
  color: rgb(var(--color-muted));
  font-size: 1rem;
  outline: none;
  box-sizing: border-box;
  border: 1.5px solid rgba(var(--color-muted), 0.4);
  user-select: auto;
}

.authorize > .authorize-form > input[type="text"]:active,
.authorize > .authorize-form > input[type="password"]:active,
.authorize > .authorize-form > input[type="text"]:focus,
.authorize > .authorize-form > input[type="password"]:focus {
  color: rgb(var(--color-primary));
  border: 1.5px solid rgba(var(--color-accent), 0.6);
}

.authorize.processing > .authorize-form > input[type="text"],
.authorize.processing > .authorize-form > input[type="password"] {
  pointer-events: none;
  opacity: 0.7;
}

.authorize > .authorize-form > .authorize-form-buttons {
  display: flex;
  position: relative;
  width: 100%;
  height: 50px;
  box-sizing: border-box;
  margin: 0;
  padding: 0;
  flex-direction: row;
  justify-content: space-between;
  align-items: center;
}

.authorize > .authorize-form > .authorize-form-buttons > a {
  display: block;
  position: relative;
  width: 45%;
  height: 50px;
  line-height: 50px;
  box-sizing: border-box;
  margin: 0;
  padding: 0;
  color: rgb(var(--color-accent));
  background-color: transparent;
  text-align: center;
  text-decoration: none;
  border-radius: var(--border-radius);
  transition: all 0.1s linear;
}

.authorize > .authorize-form > .authorize-form-buttons > a.primary {
  color: rgb(var(--color-white));
  background-color: rgba(var(--color-accent), 1);
  border-radius: var(--border-radius);
}

.authorize > .authorize-form > .authorize-form-buttons > a:hover {
  background: rgba(var(--color-accent), 0.1);
}

.authorize > .authorize-form > .authorize-form-buttons > a.primary:hover {
  background: rgba(var(--color-accent), 1);
}

@keyframes shake {
  10%, 90% {
    transform: translate3d(-1px, 0, 0);
  }
  
  20%, 80% {
    transform: translate3d(2px, 0, 0);
  }

  30%, 50%, 70% {
    transform: translate3d(-4px, 0, 0);
  }

  40%, 60% {
    transform: translate3d(4px, 0, 0);
  }
}